#!/bin/bash

root=$(dirname $(dirname $(realpath -s $0)))
action=true . $root/superdesk/master

repo_backend=${repo_backend:-"$repo/server"}

_es_wait() {
    elastic=0
    while [ $elastic -eq 0 ]
    do
        curl -s "http://localhost:9200" 2>&1 > /dev/null \
            && elastic=1 \
            || echo "waiting for elastic..."
        sleep 1
    done
}

_es_snapshots() {
    es_backups=/tmp/es-backups
    if [ ! -d $es_backups ]; then
        mkdir $es_backups
        chown elasticsearch:elasticsearch $es_backups
        echo "path.repo: $es_backups" \
            | sudo tee -a /etc/elasticsearch/elasticsearch.yml
        systemctl restart elasticsearch
        _es_wait
        curl -XPUT 'http://localhost:9200/_snapshot/backups' \
            -d '{"type": "fs", "settings": {"location": "/tmp/es-backups"}}'
    else
        _es_wait
    fi
}

_chromium() {
    apt-get install -y xvfb chromium-browser
    export CHROME_BIN=$(which chromium-browser)
    $CHROME_BIN --version
}

_chrome_stable() {
    wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
    echo "deb http://dl.google.com/linux/chrome/deb/ stable main" \
        > /etc/apt/sources.list.d/google.list
    apt-get update
    apt-get install -y --no-install-recommends xvfb google-chrome-stable

    export CHROME_BIN=`which google-chrome` && $CHROME_BIN --version

}

_chrome() {
    _chrome_stable
}

_backend_checks() {
    cd $repo_backend

    export SUPERDESK_TESTING=True
    _activate

    [ -z "$flake8" ] || flake8

    [ -z "$nose" ] || time nosetests -v --with-id

    feature=(./features/*.feature)
    [ -f $feature ] || behave=
    [ -z "$behave" ] || time behave --format progress2 --logging-clear-handlers --logcapture
}

_client_checks() {
    cd $repo/client
    [ -z "$npmtest" ] || time npm test
}

do_finish() {
    _es_snapshots
    _chrome

    _activate
    cd $repo/server
    pip install -r dev-requirements.txt
}

do_checks() {
    if [ -z "$nose" ] && [ -z "$behave" ] && [ -z "$flake8" ] && [ -z "$npmtest" ]; then
        nose=1
        behave=1
        flake8=1
        npmtest=1
    fi
    _backend_checks
    _client_checks
}

eval $action
