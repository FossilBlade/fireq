#!/bin/bash

root=$(dirname $(dirname $(realpath -s $0)))
action=true . $root/superdesk/master

_envfile_append() {
    cat <<EOF
SUPERDESK_TESTING=True
EOF
}

_es_wait() {
    elastic=0
    while [ $elastic -eq 0 ]
    do
        curl -s "http://localhost:9200" 2>&1 > /dev/null \
            && elastic=1 \
            || echo "waiting for elastic..."
        sleep 1
    done
}

_es_snapshots() {
    _es_wait
    return 0

    # TODO: fix snapshot feature
    es_backups=/tmp/es-backups
    if [ ! -d $es_backups ]; then
        mkdir $es_backups
        chown elasticsearch:elasticsearch $es_backups
        echo "path.repo: ['/tmp/es-backups']" \
            | sudo tee -a /etc/elasticsearch/elasticsearch.yml
        systemctl restart elasticsearch
        _es_wait
        curl -XPUT 'http://localhost:9200/_snapshot/backups' \
            -d '{"type": "fs", "settings": {"location": "/tmp/es-backups"}}'
    else
        _es_wait
    fi
}

_chrome() {
    wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
    echo "deb http://dl.google.com/linux/chrome/deb/ stable main" \
        > /etc/apt/sources.list.d/google.list
    apt-get update
    apt-get install -y xvfb google-chrome-stable

    export CHROME_BIN=`which google-chrome` && $CHROME_BIN --version

}

_backend_checks() {
    [ -z "$nose" ] && [ -z "$behave" ] && nose=1 && behave=1

    _es_snapshots

    . $env/bin/activate
    cd $repo/server
    pip install -r dev-requirements.txt

    flake8

    [ -z "$nose" ] || time nosetests -v

    [ -f "./features/*.feature" ] || behave=
    [ -z "$behave" ] || time behave --format progress2 --logging-clear-handlers --logcapture
}

_client_checks() {
    _chrome
    cd $(_repo_client)
    npm test
}

do_checks() {
    _backend_checks
    _client_checks
}

eval $action
