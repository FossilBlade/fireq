#!/bin/bash
set -e

root=$(dirname $(dirname $(realpath -s $0)))
action=true . $root/superdesk-dev/master

repo_remote_server=https://github.com/superdesk/superdesk-core.git
repo_remote_client=https://github.com/superdesk/superdesk-client-core.git
repo_core=$repo/server-core
repo_backend=$repo_core

eval "_orig$(declare -f _repo)"
_repo() {
    [ -d $repo ] && rm -rf $repo
    mkdir $repo
    cd $repo
    git init
    git remote add tmp https://github.com/naspeh-sf/superdesk.git
    git fetch tmp submodules
    git checkout tmp/submodules
    #git submodule update --init
    if [ "$0" = "superdesk-dev/client-core" ]; then
        git clone --depth=1 $repo_remote_server server-core
    else
        git clone --depth=1 $repo_remote_client client-core
    fi

    repo=$repo_core _orig_repo
}

do_backend() {
    _venv $env
    if [ "$0" = "superdesk-dev/client-core" ]; then
        cd $repo_core/test-server
        time pip install -r requirements.txt
        return
    fi
    cd $repo_backend
    time pip install -r requirements.txt

    # here are some deployment dependencies: gunicorn, etc.
    cd $repo/server
    time pip install -r requirements.txt
}

do_checks() {
    if [ -z "$nose" ] && [ -z "$behave" ] && [ -z "$flake8" ] && [ -z "$docs" ]; then
        docs=1
        nose=1
        behave=1
        flake8=1
    fi

    _activate
    [ -z "$docs" ] || do_docs

    _checks_init
    _backend_checks
}

do_docs() {
    cd $repo_core/docs
    make html
    [ ! -d $repo/client/dist ] || cp -Tr _build/html $repo/client/dist/docs
}

eval $action
